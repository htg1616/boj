#include <bits/stdc++.h>
#define endl '\n'
#define X first
#define Y second
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

void solve(){
    int n, l;
    cin >> n >> l;
    vector<int> a(n);
    for(int i=0; i<n; i++) cin >> a[i];

    vector<int> sort_a = a;
    sort(sort_a.begin(), sort_a.end());
    queue<pii> process;
    queue<int> A, B, C;
    for(int i=0; i<n; i++) A.push(a[i]);
    process.emplace(0, n);

    bool flag = true;
    vector<string> ans;
    while(flag){
        flag = false;
        queue<pii> next_process;
        while(!process.empty()){
            auto [l, r] = process.front(); process.pop();
            if(r-l == 1){
                ans.push_back("AB");
                ans.push_back("BA");
                A.push(A.front()); A.pop();
                next_process.push({l, r});
                continue;
            }

            int mid = (l+r)/2;
            int stand = sort_a[mid-1];
            int cnt = mid - (lower_bound(sort_a.begin(), sort_a.end(), stand) - sort_a.begin());
            for(int i=l; i<r; i++){
                int num=A.front(); A.pop();
                if(num < stand || (num==stand && cnt)){ //여기서 문제 발생
                    B.push(num);
                    ans.push_back("AB");
                    if(num == stand) cnt--;
                }
                else{
                    C.push(num);
                    ans.push_back("AC");
                }
            }
            while(!B.empty()){
                A.push(B.front()); B.pop();
                ans.push_back("BA");
            }
            while(!C.empty()){
                A.push(C.front()); C.pop(); 
                ans.push_back("CA");
            }

            if(mid-l > 1 || r-mid > 1) flag = true;
            next_process.push({l, mid});
            next_process.push({mid, r});
        }

        while(!next_process.empty()){
            process.push(next_process.front()); next_process.pop();
        }
    }
    
    cout << ans.size() << endl;
    for(string i: ans) cout << i << ' ';
    cout << endl;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);

    int t;
    cin >> t;
    while(t--) solve();
    return 0;
}