#include <bits/stdc++.h>
#define endl '\n'
#define X first
#define Y second
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef tuple<int, int, int> Edge;

constexpr ll INF = 1e15;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);

    int n, start, end, m;
    cin >> n >> start >> end >> m;
    vector<Edge> edges;
    vector<vector<int>> rev_adj(n);
    for(int i=0; i<m; i++){
        int s, t, c;
        cin >> s >> t >> c;
        edges.emplace_back(s, t, c);
        rev_adj[t].push_back(s);
    }
    vector<int> money(n);
    for(int i=0; i<n; i++) cin >> money[i];

    vector<bool> vis(n, false);
    auto dfs = [&](auto &&dfs, int u) -> void{
        vis[u] = true;
        for(int v: rev_adj[u]) if(!vis[v]) dfs(dfs, v);
    };
    dfs(dfs, end);

    vector<ll> dist(n, -INF);
    dist[start] = money[start];
    bool pos_cycle = false;
    for(int i=0; i<n; i++){
        for(auto [s, t, c]: edges){
            if(dist[s] != -INF && dist[t] < dist[s]-c+money[t]){
                dist[t] = dist[s]-c+money[t];
                if(i==n-1 && vis[t]) pos_cycle = true;
            }
        }
    }
    
    if(dist[end] == -INF) cout << "gg";
    else if(pos_cycle) cout << "Gee";
    else cout << dist[end];
    return 0;
}