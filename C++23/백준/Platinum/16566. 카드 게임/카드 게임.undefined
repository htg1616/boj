#include <bits/stdc++.h>
#define endl '\n'
#define X first
#define Y second
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

class DSU{
  int n;
  vector<int> parent;

public:
    DSU(int _n){
        n = _n;
        parent.resize(n);
        iota(parent.begin(), parent.end(), 0);
    }

    int find(int u){
        if(u != parent[u]) parent[u] = find(parent[u]);
        return parent[u];
    }

    void merge(int u, int v){
        u = find(u), v = find(v);
        if(u < v) parent[v] = u;
        else if(u > v) parent[u] = v;
    }

    int upper_bound(int x, vector<int> const &a){
        int l=0, r=n-1;
        while(l<r){
            int m = (l+r)/2;
            if(a[find(m)] > x) r = m;
            else l=m+1;
        }
        return l;
    }
};

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);

    int n, m, k;
    cin >> n >> m >> k;
    vector<int> arr(m+1);
    for(int i=1; i<=m; i++) cin >> arr[i];
    sort(arr.begin(), arr.end());

    DSU dsu(m+1);
    while(k--){
        int x;
        cin >> x;
        int i = dsu.upper_bound(x, arr);
        cout << arr[dsu.find(i)] << endl;
        dsu.merge(i, i-1);
    }
    return 0;
}