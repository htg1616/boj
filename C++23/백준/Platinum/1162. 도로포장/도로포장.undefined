#include <bits/stdc++.h>
#define endl '\n'
#define X first
#define Y second
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

constexpr ll INF = 1e15;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);

    int n, m, k;
    cin >> n >> m >> k;
    int N = n*(k+1);
    vector<vector<pii>> adj(N);
    for(int i=0; i<m; i++){
        int a, b, c;
        cin >> a >> b >> c;
        a--, b--;
        for(int j=0; j<=k; j++){
            adj[n*j+a].emplace_back(n*j+b, c);
            adj[n*j+b].emplace_back(n*j+a, c);
            if(j!=k){
                adj[n*j+a].emplace_back(n*(j+1)+b, 0);
                adj[n*j+b].emplace_back(n*(j+1)+a, 0);
            }
        }
    }

    vector<bool> vis(N);
    vector<ll> dist(N, INF); dist[0]=0;
    priority_queue<pll, vector<pll>, greater<pll>> pq; pq.emplace(0, 0);
    while(!pq.empty()){
        int u = pq.top().second; pq.pop();
        if(vis[u]) continue;
        vis[u] = true;
        for(auto [v, d]: adj[u]){
            if(dist[u]+d >= dist[v]) continue;
            dist[v] = dist[u]+d;
            pq.emplace(dist[v], v);
        }
    }

    ll ans = INF;
    for(int j=0; j<=k; j++){
        ans = min(ans, dist[j*n+(n-1)]);
    }
    cout << ans << endl;
    return 0;
}