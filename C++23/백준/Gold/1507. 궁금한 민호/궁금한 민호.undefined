#include <bits/stdc++.h>
#define endl '\n'
#define X first
#define Y second
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef tuple<int, int, int> Edge;

constexpr int INF = 1'000'000;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);

    int n;
    cin >> n;
    vector<vector<int>> target(n, vector<int>(n));
    vector<Edge> edges;
    for(int i=0; i<n; i++) for(int j=0; j<n; j++){
        cin >> target[i][j];
        if(i < j) edges.emplace_back(target[i][j], i, j); 
    }

    vector<vector<int>> dist(n, vector<int>(n, INF));
    for(int i=0; i<n; i++) dist[i][i] = 0;
    sort(edges.begin(), edges.end());

    int ans = 0;
    bool flag = true;
    for(auto [w, u, v]: edges){
        if(dist[u][v] == w) continue;
        if(dist[u][v] < w) flag = false;
        ans += w;
        dist[u][v] = dist[v][u] = w;
        for(int k=0; k<n; k++){
            for(int i=0; i<n; i++){
                for(int j=0; j<n; j++) dist[i][j] = min(dist[i][j], dist[i][k]+dist[k][j]);
            }
        }
    }

    if(!flag) cout << -1;
    else cout << ans;

    return 0;
}